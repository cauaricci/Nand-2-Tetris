// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
     DMux8Way(in=load, sel=address[0..2], a=Ram1, b=Ram2, c=Ram3, d=Ram4, 
e=Ram5, f=Ram6, g=Ram7, h=Ram8);
     RAM64(in=in, load=Ram1, address=address[3..8], out=RamOut1);
     RAM64(in=in, load=Ram2, address=address[3..8], out=RamOut2);
     RAM64(in=in, load=Ram3, address=address[3..8], out=RamOut3);
     RAM64(in=in, load=Ram4, address=address[3..8], out=RamOut4);
     RAM64(in=in, load=Ram5, address=address[3..8], out=RamOut5);
     RAM64(in=in, load=Ram6, address=address[3..8], out=RamOut6);
     RAM64(in=in, load=Ram7, address=address[3..8], out=RamOut7);
     RAM64(in=in, load=Ram8, address=address[3..8], out=RamOut8);
     Mux8Way16(a=RamOut1, b=RamOut2, c=RamOut3, d=RamOut4, e=RamOut5, 
f=RamOut6, g=RamOut7, h=RamOut8, sel=address[0..2], out=out);
}